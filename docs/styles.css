:root {
  --bg-color: #1e1e1e;
  --text-color: #f0f0f0;
  --card-bg: #1e1e1e;
  --card-text: #eee;
  /* Remove or change --card-border if not needed */
  --border-color: #8A2BE2;
  --svg-fill: #1e1e1e;
  --label-bg: rgb(0, 0, 0);
  --preview-card-bg: #1e1e1e;
}
.light-mode {
  --bg-color: #eff3f1;
  --text-color: #000000;
  --card-bg: #eff3f1;
  --card-text: #222;
  --label-bg: white;
  /* Remove or change --card-border if not needed */
  --border-color: #8A2BE2;
  --svg-fill: #eff3f1;
  --preview-card-bg: #eff3f1;
}


html {
  overflow: hidden;
}


body {
  background-color: var(--bg-color);
  color: var(--text-color);
  transition: background 0.3s, color 0.3s;
  margin: 0;
  overflow: hidden;
  font-family: Arial, sans-serif;
}

h1 {
  text-align: center;
  font-size: 2rem;
  margin-bottom: 0.5rem;
}

h2.caption {
  text-align: center;
  font-size: 1.2rem;
  font-weight: normal;
  color: #979797;
  margin-bottom: 2rem;
}

.description {
  max-width: 800px;
  margin: 0 auto 3rem auto;
  font-size: 1rem;
  color: #444;
  text-align: center;
}

.light-mode .header-overlay {
  background-color: rgba(239, 243, 241, 0.85); /* Lighter semi-transparent overlay */

}

.header-overlay {
  position: relative;
  z-index: 10; /* Ensures text stays above the graph */
  background-color: rgba(30, 30, 30, 0.7); /* Dark semi-transparent background */
  backdrop-filter: blur(4px); /* Optional: Adds a frosted-glass effect */
  padding: 1em 0;
  height: 230px; /* Set your fixed width here */
  margin: 0 auto; /* Center the overlay horizontally */
}


/* Adjust the visualization container to remove extra padding */
.visualization-container {
  margin: 0 auto;
  max-width: 90%;
  padding: 1em 2em; /* Reduced padding to tighten the overlay */
}

/* Ensure the SVG appears behind the overlay */
svg {
  position: relative;
  z-index: 0;
  margin-top: -25%; /* Pulls the SVG up slightly behind the overlay */
}


.card {
  background: var(--card-bg);

  color: var(--text-color);
  border-radius: 0px;
  padding: 5em;
  margin: 0 auto;
  max-width: 100%;
  max-height: 100%;
  overflow: auto;

  box-sizing: border-box;
  display: flex;
  flex-direction: column;
}

.card h2 {
  font-size: 24px;
  margin-bottom: 0.25em;
}


.theme-toggle {
  text-align: right;
  margin-bottom: 1em;
}

.controls {
  margin-bottom: 1em;
}

input[type=range] {
  accent-color: #8A2BE2;
  width: 350px;
}

.nav-buttons {
  display: flex;
  gap: 10px;
  margin-top: 10px;
}

.nav-container {
  display: flex;
  justify-content: flex-end; /* Align buttons to the right */
  gap: 10px; /* Space between buttons */
  margin-top: 1em; /* Optional spacing from elements above */
}

.nav-button {
  padding: 8px 16px;
  background-color: rgba(138, 43, 226, 0.7);
  color: white;
  border: none;
  border-radius: 4px;
  cursor: pointer;
  transition: background-color 0.3s;
}


.nav-button:hover {
  background-color: rgba(138, 43, 226, 0.9);
}



.card-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(220px, 1fr));
  gap: 2rem;
  max-width: 700px;
  margin: 2rem auto;
  padding: 0 1rem;
  justify-content: center;
}

.preview-card {
  background-color: var(--preview-card-bg);
  color: var(--card-text);
  /*border: 5px solid var(--card-border);*/
  border-radius: 8px;
  overflow: hidden;
  text-align: center;
  font-size: 0.9rem;
  transition: transform 0.2s ease, background-color 0.3s, color 0.3s;
  display: flex;
  flex-direction: column;
  height: 400px;
}


.graph-overlay-separator {
  width: 100%;
  height: 4px;
  /*background-color: rgba(138, 43, 226, 0.5);  blueviolet with 50% opacity */
  margin: 10px 0;
  position: relative;
  z-index: 10;

}


.preview-card img {
  width: 100%;
  height: 100%;
  object-fit: cover;
  display: block;
}

.preview-card .card-title {
  font-weight: bold;
  margin: 0.9em 0 .45em;
  font-size: 1.3rem;
  flex-grow: 1;
  padding: 0 0.8em;
}

.preview-card .card-footer {
  color: var(--card-text);
  margin-bottom: 0.5em;
  font-size: 0.85rem;
}

.preview-card:hover {
  transform: scale(1.03);
}

.card-link {
  text-decoration: none;
  color: inherit;
}



